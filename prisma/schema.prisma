// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id
  name      String?
  email     String  @unique
  avatarUrl String?

  projects  ProjectUser[]
  bookmarks Bookmark[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          String     @id @default(cuid())
  name        String
  slug        String     @unique
  verified    Boolean    @default(false)
  description String
  logo        String
  image       String?
  gradient    String     @default("from-purple-100 via-violet-50 to-blue-100")
  stars       Int        @default(0)
  clicks      Int        @default(0)
  links       Link[]
  bookmarkers Bookmark[]

  users ProjectUser[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([verified])
  @@index([stars])
}

model ProjectUser {
  id        String   @id @default(cuid())
  role      String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())

  @@unique([projectId, userId])
}

model Bookmark {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String

  @@unique([projectId, userId])
}

enum LinkType {
  GITHUB
  TWITTER
  LINKEDIN
  WEBSITE
}

model Link {
  id        String   @id @default(cuid())
  type      LinkType
  url       String   @unique
  shortLink String   @unique
  order     Int      @default(0)
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
